NETMOD WG LC of Module Versioning and YANG Semver

Key issues to resolve in the WG before continuing the WG LC process:

K1) Allow NBC changes in YANG 1.0 & YANG 1.1 or not?
K2) * N4) really need multiple revision label schemes? Collapse to just one?
K3) * N9) do we really need _COMPATIBLE in YANG Semver? (Jurgen)
              - YANG Semver vs regular Semver

Other issues raised but not "key" are below

Should N5 be a "key" issue?


###################################
K1) Allow NBC changes in YANG 1.0 & YANG 1.1 or not?

Option 1 - Update RFC7950 to Allow NBC Changes
-----------------
- Module Versioning modifies 7950 to allow NBC changes
- guidance that NBC changes SHOULD NOT be done (impact to user base)
- rev:non-backwards-compatible is a YANG extension
    - introduction in published YANG does not impact current tooling (ignored until recognized)
PROS:
- address fundamental requirement of this versioning work (requirements doc)
- allows gradual adoption in the industry. YANG authors can immeditately start publishing with the new extensions.
- move faster to produce modules in the IETF (accept some errors/iteration)
- authors believe work is ready
- broad vendor support
- rough alignment with OpenConfig (use YANG 1.0 + OC Semver)
CONS:
- perception that we're "cheating" by not bumping our own spec's version
- Not fundamentally mandatory for clients or servers using YANG (mandatory for YANG claiming conformance to Module Versioning).

Option 2 - RFC7950-bis: Publish a new version of the YANG language to allow NBC changes
-------------------------
- NBC changes only allowed in a new (future) version of YANG
- TBD: YANG 1.2 vs 2.0 (note YANG 1.1 isn't BC with YANG 1.0)
- Content = Module Versioning + YANG Semver + very limited YANG NEXT items
- rev:non-backwards-compatible tag is a language keyword
    - consequence: any use of it breaks all YANG 1.0/1.1 tooling that hasn't been updated
- TBD how to handle small NBC changes in IETF in the short term (i.e. non conformance to 7950)?
    - RFC6991 bis - change the use/meaning of ip-address (or change datetime)
	- YANG date-and-time (because of SEDATE date string changes)

PROS:
- address fundamental requirement of this versioning work (requirements doc)
- clear delineation of changes in the YANG language
- consistent with philosophy that version number changes for significant changes in a spec (avoids concern that YANG is changing without bumping the version of YANG)
- can do this with mandatory YANG keywords which helps increase conformance to the new rules
CONS:
- difficult to roll out in the industry. Tools need upgrading before they won't error on a YANG 1.2 module. 
- Authors can't publish YANG 1.2 until their users have upgraded their tools. Everyone has to move at once.
- likely large delay in producing the work (unclear what would go into YANG 1.2, may not reach concensus easily on N items)
- delay in follow up work (Packages, Schema Comparison, Version Selection)
- continue dominating WG effort for longer (opportunity cost)

Option 3 - Strict Adherence to Current RFC7950 Rules
------------------------------
- IESG will be unable to approve any RFCs that make any changes to IETF YANG modules that donâ€™t strictly conform to those rules
    - RFC6991 bis would not be allowed to change the use/meaning of ip-address (or change datetime)
	- YANG date-and-time couldn't change (related to SEDATE date string changes)
PROS:
- clear rules for entire industry including IETF
CONS:
- doesn't address agreed/adopted requirements of YANG versioning work
- incorrect assumption in tool chains, etc that NBC changes don't happen. Silent failures.

########################################
other issues (non-key issues):
N1) File nameing (Robert Varga)
N2) Default values for deprecated-nodes-implemented & obsolete-nodes-absent (Fengchong)
N3) recommended-min is insufficient (soft and we need a "max") (Jurgen)
* N4) really need multiple revision label schemes? Collapse to just one?
  - may have strong disagreement on this within the WG
N5) make this work a separate "versioning scheme" (where the current 7950 rules are another versioning scheme) (Jurgen)
N6) maintain import constraints outside of the modules (e.g. semver for a package only) (Jurgen)
N7) should changes to import recommended-min or revision-date be NBC? (Jurgen)
* N8) use per-node tags instead of top level?  (Jurgen)
* N9) do we really need _COMPATIBLE in YANG Semver? (Jurgen)
N10) byte-equivalent (semantic API vs byte content of .yang file). Questions about *why* we're tackling this (Jurgen ,Robert V, Andy, Carsten, Tom)

