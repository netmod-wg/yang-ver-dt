1. on-wire vs schema

    one algo for both cases or two algos?

    -> two different algorithms

    -> changes to the module that aren't semantic should raise that
       there has been editorial changes.

       TBD: should all editorial (text) diffs be reported?

       TBD: editorial changes that might change semantics?

       TBD: metadata arguments which relies on the formatted input text
            * description, contact (etc), extension
              -> how does the user want to tune verbosity level for
                 editorial changes
                 * whitespace, spelling(?), editorial, potentially-nbc
            * xpath, must, when
              -> don't normalize xpath expressions
            * presence statements

    a. ordering in the schema, RFC 7950 doesn't allow reordering => NBC
    b. groupings / uses
    c. typedefs, namespace, choice names, prefixes, module metadata


2. list of useful tool options

    document this as we go and put them in an appendix

3. error-tags, error messages, and other error statements

    might be relied on verbatim by users

4. comparison on module or full schema (YANG artifact, arbitrary blob)

    a. features
    b. packages vs directory vs library vs artifact
    c. package specific comparison, package metadata or only looking
       at the modules
    d. import only or implemented module

5. override/per-node tags

6. separate rules for config vs state

7. tool/report verbosity

    a. where to report changes (module, grouping, typedef, uses)
    b. output level, conceptual level or exact strings
    c. granularity: error/warning/info level per reported change
       category

8. sub-modules

9. write algorithm in pseudo code or just describe the rules/goals in text?

10. categories in the report

    bc, nbc, potentially-nbc, editorial

    allow filtering in the draft without defining it

11. only for YANG 1.1?

12. renamed-from
